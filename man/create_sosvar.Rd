% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_sosvar.R
\name{create_sosvar}
\alias{create_sosvar}
\title{Calculates comobidites and outcomes from SoS data}
\usage{
create_sosvar(sosdata, cohortdata, patid = lopnr, indexdate = indexdtm,
  add_unique, sosdate = sosdtm, censdate, type, name,
  starttime = ifelse(type == "out", 1, 0), stoptime, diakod, opkod, ekod,
  diavar = DIA_all, opvar = OP_all, evar = ekod_all,
  meta_reg = "Patientregistret, sluten-, oppenvard- och dagkirurgi",
  meta_pos, warnings = FALSE)
}
\arguments{
\item{sosdata}{Data where DIA, OP, Ekod variables are found.}

\item{cohortdata}{Data containing the cohort with at least columns
patid and indexdate.}

\item{patid}{Patient identifier. Default is lopnr.}

\item{indexdate}{Index date for the patient (usually date of admission or
discharge entered into SwedeHF). Default is indexdtm.}

\item{add_unique}{If patid and indexdate are not unique in cohortdata, this
identifies unique posts.}

\item{sosdate}{Date of incident (comorbidity or outcome)
in sosdata. Default is sosdtm.}

\item{censdate}{Only for type = "out". Outcomes are
up until this time point (usually date of death or censoring).}

\item{type}{Possible values are "out" and "mh".
Is the resulting variable an outcome (and time to is calculated)
or medical history (comorbidity)?}

\item{name}{Name of resulting variable
(prefix sos_out_ is added to outcome and sos_mh_ to medical history).}

\item{starttime}{If type = "out" amount of time (in days) AFTER indexdate
to start counted as outcome. If type = "mh" amount of time (in days)
PRIOR to indexdate to . Indexdate = 0, all values prior to
indexdate are negative. Default is 1 ("out") and 0 ("mh").}

\item{stoptime}{If type = "out" amount of time (in days) AFTER indexdate to
be counted. If type = "mh" amount of time (in days) PRIOR to indexdate
to Indexdate = 0, all values prior to indexdate are negative.
Default is any time prior to starttime is considered a comorbidity
and any time after starttime is considered an outcome.}

\item{diakod}{String of icd codes as a regular expression
defining the outcome/medical history. Should start
with blank space " ".}

\item{opkod}{String of procedure codes as a regular expression
defining the outcome/medical history. Should start
with blank space " ".}

\item{ekod}{String of e codes as a regular expression defining
the outcome/medical history. Should start
with blank space " ".}

\item{diavar}{Column where diakod is found. All codes should start
with blank space " ". Default is DIA_all.}

\item{opvar}{Column where opkod is found. All codes should start
with blank space " ". Default is OP_all.}

\item{evar}{Column where ekod is found. All codes should start
with blank space " ". Default is ekod_all.}

\item{meta_reg}{Optional argument specifying registries used. Printed in
metadatatable. Default is
"Patientregistret, sluten-, oppenvard- och dagkirurgi".}

\item{meta_pos}{Optional argument specifying positions used to search for
outcomes/comorbidities. Printed in metadatatable.}

\item{warnings}{Should warnings be printed. Default is FALSE.}
}
\value{
dataset with column containing medical history/outcome.
Also dataset metaout that writes directly to global enviroment
with information on constructed variables.
}
\description{
\Sexpr[results=rd, stage=render]{lifecycle::badge("experimental")}

Calculates comobidites and outcomes (including time to for the latter)
from DIA, OP and ekod variables from National Patient Registry
or Cause of Death Registry.
}
\examples{

sos_data <- prep_sosdata(sos_data)

rs_data_test <- create_sosvar(
  sosdata = sos_data,
  cohortdata = rs_data,
  patid = id,
  indexdate = indexdtm,
  sosdate = sosdtm,
  type = "mh",
  name = "cv1y",
  diakod = " I",
  stoptime = -365.25
)
}
\seealso{
\code{\link{prep_sosdata}}
}
