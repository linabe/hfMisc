% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_sosvar.R
\name{create_sosvar}
\alias{create_sosvar}
\title{Calculates comorbidities and outcomes from SoS data}
\usage{
create_sosvar(
  type,
  name,
  sosdata,
  cohortdata,
  patid = lopnr,
  indexdate = indexdtm,
  add_unique,
  sosdate = sosdtm,
  censdate,
  allowedcenslimit = 0,
  noof = FALSE,
  comduration = FALSE,
  starttime = ifelse(type == "com", 0, 1),
  stoptime,
  diakod,
  opkod,
  ekod,
  diakodneg = FALSE,
  opkodneg = FALSE,
  ekodneg = FALSE,
  diavar = DIA_all,
  opvar = OP_all,
  evar = ekod_all,
  valsclass = "num",
  meta_reg = "NPR (in+out)",
  meta_pos,
  warnings = TRUE
)
}
\arguments{
\item{type}{Possible values are "out" and "com".
Is the resulting variable an outcome (and time to is calculated)
or comorbidity?}

\item{name}{Name of resulting variable
(prefix sos_out_ is added to outcome and sos_com_ to comorbidity).}

\item{sosdata}{Data where DIA, OP, Ekod variables are found.}

\item{cohortdata}{Data containing the cohort with at least columns
patid and indexdate.}

\item{patid}{Patient identifier. Default is lopnr.}

\item{indexdate}{Index date for the patient (usually date of admission or
discharge entered into SwedeHF). Default is indexdtm.}

\item{add_unique}{If patid and indexdate are not unique in cohortdata, this
identifies unique posts.}

\item{sosdate}{Date of incident (comorbidity or outcome)
in sosdata. Default is sosdtm.}

\item{censdate}{Vector of dates. Only applicable for type = "out". Outcomes are
allowed up until this day (usually date of death or end follow-up).}

\item{allowedcenslimit}{Optional single value with allowed time unit between
sosdate and censdate that still makes the sosdate be a valid event.
Used for example when patients who are discharged day after death
should still be counted as an event.
Can cause unexpected results if the sos_data contains information > than
last follow-up.}

\item{noof}{Should comorbs/outcomes be number of or first? Default it first (FALSE).
No time to is calculated for noof = TRUE and type = "out".}

\item{comduration}{Should duration of the comorbidity be calculated (TRUE). Default is FALSE.}

\item{starttime}{If type = "out" amount of time (in days) AFTER indexdate
to start counting outcomes. If type = "com" amount of time (in days)
PRIOR to indexdate. Indexdate = 0, all values prior to
indexdate are negative. Default is 1 ("out") and 0 ("com").}

\item{stoptime}{If type = "out" amount of time (in days) AFTER indexdate to
be counted. Note that censdate will be adjusted to stoptime.
If type = "com" amount of time (in days) PRIOR to indexdate.
Indexdate = 0, all values prior to indexdate are negative.
Default is any time prior to starttime is considered a comorbidity
and any time after starttime is considered an outcome.}

\item{diakod}{String of icd codes as a regular expression
defining the outcome/comorbidity. Should start
with blank space " ". Also see diakodneg.}

\item{opkod}{String of procedure codes as a regular expression
defining the outcome/comorbidity. Should start
with blank space " ". Also see opkodneg.}

\item{ekod}{String of e codes as a regular expression defining
the outcome/comorbidity. Should start
with blank space " ". Also see ekodneg.}

\item{diakodneg}{Should return non-matching codes in diakod? Default is FALSE.}

\item{opkodneg}{Should return non-matching codes in opkod? Default is FALSE.}

\item{ekodneg}{Should return non-matching codes in ekod? Default is FALSE.}

\item{diavar}{Column where diakod is found. All codes should start
with blank space " ". Default is DIA_all.}

\item{opvar}{Column where opkod is found. All codes should start
with blank space " ". Default is OP_all.}

\item{evar}{Column where ekod is found. All codes should start
with blank space " ". Default is ekod_all.}

\item{valsclass}{optional argument specifying the class of the
comorbidities/outcomes. Allowed values are "num" (numeric: 1, 0),
"char" (character: "yes", "no"), "fac" (factor: "yes", "no").
Default is "num".}

\item{meta_reg}{Optional argument specifying registries used. Printed in
metadatatable. Default is
"NPR (in+out)".}

\item{meta_pos}{Optional argument specifying positions used to search for
outcomes/comorbidities. Printed in metadatatable.}

\item{warnings}{Should warnings be printed. Default is FALSE.}
}
\value{
dataset with column containing comorbidity/outcome.
Also dataset metaout that writes directly to global enviroment
with information on constructed variables.
}
\description{
\ifelse{html}{\out{<a href='https://www.tidyverse.org/lifecycle/#stable'><img src='figures/lifecycle-stable.svg' alt='Stable lifecycle'></a>}}{\strong{Stable}}

Calculates comorbidities and outcomes (including time to for the latter)
from DIA, OP and ekod variables from National Patient Registry.
}
\examples{

sos_data <- prep_sosdata(sos_data, evar = "ekod")

rs_data <- create_sosvar(
  sosdata = sos_data,
  cohortdata = rs_data,
  patid = id,
  indexdate = indexdtm,
  sosdate = sosdtm,
  type = "com",
  name = "cv1y",
  diakod = " I",
  stoptime = -365.25,
  warnings = FALSE
)
}
\seealso{
\code{\link{prep_sosdata}}

\code{\link{create_deathvar}}
}
